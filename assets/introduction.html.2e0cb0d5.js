import{r as p,o as l,c as i,a as s,b as a,w as e,F as u,d as o,e as n}from"./app.02013ef7.js";import{_ as r}from"./hello.c129bc5d.js";import{_ as k}from"./plugin-vue_export-helper.21dcd24c.js";const d={},m=o(`<h1 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h1><h2 id="what-is-rule-engine" tabindex="-1"><a class="header-anchor" href="#what-is-rule-engine" aria-hidden="true">#</a> What is Rule Engine?</h2><p>Rule Engine is a javascript engine for creating complex pipelines. It is based on the concept of sequential execution of blocks of code, named steps that connect lines to each other through ports.</p><p>Example:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>
  Pipeline<span class="token punctuation">,</span>
  StartStep<span class="token punctuation">,</span>
  EndStep<span class="token punctuation">,</span>
  SingleStep
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@ruleenginejs/runtime&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> pipeline <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Pipeline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> start <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StartStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> end <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EndStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> step <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SingleStep</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function-variable function">handler</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Hello, world!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

start<span class="token punctuation">.</span><span class="token function">connectTo</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span><span class="token punctuation">;</span>
step<span class="token punctuation">.</span><span class="token function">connectTo</span><span class="token punctuation">(</span>end<span class="token punctuation">)</span><span class="token punctuation">;</span>

pipeline<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">,</span> step<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Run pipeline</span>
pipeline<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h3 id="with-use-editor" tabindex="-1"><a class="header-anchor" href="#with-use-editor" aria-hidden="true">#</a> With Use Editor</h3>`,6),b=n("The editor uses its own JSON text "),h=n("file format"),_=n(" with "),f=s("code",null,".rule",-1),g=n(" extension."),w=s("p",null,"Example:",-1),x=s("p",null,[s("img",{src:r,alt:"Hello"})],-1),v=s("p",null,"Next, we compile the rule file into a javascript that contains the generated pipeline code.",-1),y=n("There are several ways to compile the rule file: "),S=n("webpack loader"),j=n(", "),E=n("rollup plugin"),N=n(" or "),R={href:"https://marketplace.visualstudio.com/items?itemName=ruleengine.vscode-ruleengine-compiler",target:"_blank",rel:"noopener noreferrer"},T=n("VS Code Extension"),V=n("."),q=o(`<p>After the compilation step, we import it into our application and execute pipeline.</p><p>App.js</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> foo <span class="token keyword">from</span> <span class="token string">&#39;./foo.rule&#39;</span><span class="token punctuation">;</span>  <span class="token comment">// if using webpack or rollup</span>

<span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// context is any custom object</span>
foo<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,3);function I(L,B){const t=p("RouterLink"),c=p("ExternalLinkIcon");return l(),i(u,null,[m,s("p",null,[b,a(t,{to:"/guide/essentials/rule-file.html"},{default:e(()=>[h]),_:1}),_,f,g]),w,x,v,s("blockquote",null,[s("p",null,[y,a(t,{to:"/guide/essentials/webpack-loader.html"},{default:e(()=>[S]),_:1}),j,a(t,{to:"/guide/essentials/rollup-plugin.html"},{default:e(()=>[E]),_:1}),N,s("a",R,[T,a(c)]),V])]),q],64)}var H=k(d,[["render",I]]);export{H as default};
